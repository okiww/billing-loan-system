// Code generated by MockGen. DO NOT EDIT.
// Source: internal/loan/repositories/loan_bill_repository.go

// Package loan_mock is a generated GoMock package.
package loan_mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/okiww/billing-loan-system/internal/loan/models"
)

// MockLoanBillRepositoryInterface is a mock of LoanBillRepositoryInterface interface.
type MockLoanBillRepositoryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockLoanBillRepositoryInterfaceMockRecorder
}

// MockLoanBillRepositoryInterfaceMockRecorder is the mock recorder for MockLoanBillRepositoryInterface.
type MockLoanBillRepositoryInterfaceMockRecorder struct {
	mock *MockLoanBillRepositoryInterface
}

// NewMockLoanBillRepositoryInterface creates a new mock instance.
func NewMockLoanBillRepositoryInterface(ctrl *gomock.Controller) *MockLoanBillRepositoryInterface {
	mock := &MockLoanBillRepositoryInterface{ctrl: ctrl}
	mock.recorder = &MockLoanBillRepositoryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLoanBillRepositoryInterface) EXPECT() *MockLoanBillRepositoryInterfaceMockRecorder {
	return m.recorder
}

// CreateLoanBill mocks base method.
func (m *MockLoanBillRepositoryInterface) CreateLoanBill(ctx context.Context, loanBill *models.LoanBillModel) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateLoanBill", ctx, loanBill)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateLoanBill indicates an expected call of CreateLoanBill.
func (mr *MockLoanBillRepositoryInterfaceMockRecorder) CreateLoanBill(ctx, loanBill interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateLoanBill", reflect.TypeOf((*MockLoanBillRepositoryInterface)(nil).CreateLoanBill), ctx, loanBill)
}
