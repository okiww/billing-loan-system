// Code generated by MockGen. DO NOT EDIT.
// Source: internal/loan/repositories/loan_bill_repository.go

// Package loan_mock is a generated GoMock package.
package loan_mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/okiww/billing-loan-system/internal/loan/models"
)

// MockLoanBillRepositoryInterface is a mock of LoanBillRepositoryInterface interface.
type MockLoanBillRepositoryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockLoanBillRepositoryInterfaceMockRecorder
}

// MockLoanBillRepositoryInterfaceMockRecorder is the mock recorder for MockLoanBillRepositoryInterface.
type MockLoanBillRepositoryInterfaceMockRecorder struct {
	mock *MockLoanBillRepositoryInterface
}

// NewMockLoanBillRepositoryInterface creates a new mock instance.
func NewMockLoanBillRepositoryInterface(ctrl *gomock.Controller) *MockLoanBillRepositoryInterface {
	mock := &MockLoanBillRepositoryInterface{ctrl: ctrl}
	mock.recorder = &MockLoanBillRepositoryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLoanBillRepositoryInterface) EXPECT() *MockLoanBillRepositoryInterfaceMockRecorder {
	return m.recorder
}

// CreateLoanBill mocks base method.
func (m *MockLoanBillRepositoryInterface) CreateLoanBill(ctx context.Context, loanBill *models.LoanBillModel) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateLoanBill", ctx, loanBill)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateLoanBill indicates an expected call of CreateLoanBill.
func (mr *MockLoanBillRepositoryInterfaceMockRecorder) CreateLoanBill(ctx, loanBill interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateLoanBill", reflect.TypeOf((*MockLoanBillRepositoryInterface)(nil).CreateLoanBill), ctx, loanBill)
}

// GetLoanBillByID mocks base method.
func (m *MockLoanBillRepositoryInterface) GetLoanBillByID(ctx context.Context, id int) (*models.LoanBillModel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLoanBillByID", ctx, id)
	ret0, _ := ret[0].(*models.LoanBillModel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLoanBillByID indicates an expected call of GetLoanBillByID.
func (mr *MockLoanBillRepositoryInterfaceMockRecorder) GetLoanBillByID(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLoanBillByID", reflect.TypeOf((*MockLoanBillRepositoryInterface)(nil).GetLoanBillByID), ctx, id)
}

// GetLoanBillsByLoanID mocks base method.
func (m *MockLoanBillRepositoryInterface) GetLoanBillsByLoanID(ctx context.Context, loanID int) ([]models.LoanBillModel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLoanBillsByLoanID", ctx, loanID)
	ret0, _ := ret[0].([]models.LoanBillModel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLoanBillsByLoanID indicates an expected call of GetLoanBillsByLoanID.
func (mr *MockLoanBillRepositoryInterfaceMockRecorder) GetLoanBillsByLoanID(ctx, loanID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLoanBillsByLoanID", reflect.TypeOf((*MockLoanBillRepositoryInterface)(nil).GetLoanBillsByLoanID), ctx, loanID)
}

// GetTotalLoanBillOverdueByLoanID mocks base method.
func (m *MockLoanBillRepositoryInterface) GetTotalLoanBillOverdueByLoanID(ctx context.Context, id int32) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTotalLoanBillOverdueByLoanID", ctx, id)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTotalLoanBillOverdueByLoanID indicates an expected call of GetTotalLoanBillOverdueByLoanID.
func (mr *MockLoanBillRepositoryInterfaceMockRecorder) GetTotalLoanBillOverdueByLoanID(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTotalLoanBillOverdueByLoanID", reflect.TypeOf((*MockLoanBillRepositoryInterface)(nil).GetTotalLoanBillOverdueByLoanID), ctx, id)
}

// UpdateLoanBillStatuses mocks base method.
func (m *MockLoanBillRepositoryInterface) UpdateLoanBillStatuses(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateLoanBillStatuses", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateLoanBillStatuses indicates an expected call of UpdateLoanBillStatuses.
func (mr *MockLoanBillRepositoryInterfaceMockRecorder) UpdateLoanBillStatuses(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateLoanBillStatuses", reflect.TypeOf((*MockLoanBillRepositoryInterface)(nil).UpdateLoanBillStatuses), ctx)
}
