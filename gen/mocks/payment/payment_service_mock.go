// Code generated by MockGen. DO NOT EDIT.
// Source: internal/payment/services/payment_service.go

// Package payment_mock is a generated GoMock package.
package payment_mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	dto "github.com/okiww/billing-loan-system/internal/dto"
	models "github.com/okiww/billing-loan-system/internal/payment/models"
)

// MockPaymentServiceInterface is a mock of PaymentServiceInterface interface.
type MockPaymentServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockPaymentServiceInterfaceMockRecorder
}

// MockPaymentServiceInterfaceMockRecorder is the mock recorder for MockPaymentServiceInterface.
type MockPaymentServiceInterfaceMockRecorder struct {
	mock *MockPaymentServiceInterface
}

// NewMockPaymentServiceInterface creates a new mock instance.
func NewMockPaymentServiceInterface(ctrl *gomock.Controller) *MockPaymentServiceInterface {
	mock := &MockPaymentServiceInterface{ctrl: ctrl}
	mock.recorder = &MockPaymentServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPaymentServiceInterface) EXPECT() *MockPaymentServiceInterfaceMockRecorder {
	return m.recorder
}

// MakePayment mocks base method.
func (m *MockPaymentServiceInterface) MakePayment(ctx context.Context, paymentRequest *dto.PaymentRequest) (*models.Payment, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MakePayment", ctx, paymentRequest)
	ret0, _ := ret[0].(*models.Payment)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// MakePayment indicates an expected call of MakePayment.
func (mr *MockPaymentServiceInterfaceMockRecorder) MakePayment(ctx, paymentRequest interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MakePayment", reflect.TypeOf((*MockPaymentServiceInterface)(nil).MakePayment), ctx, paymentRequest)
}

// ProcessUpdatePayment mocks base method.
func (m *MockPaymentServiceInterface) ProcessUpdatePayment(ctx context.Context, request models.Payment) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ProcessUpdatePayment", ctx, request)
	ret0, _ := ret[0].(error)
	return ret0
}

// ProcessUpdatePayment indicates an expected call of ProcessUpdatePayment.
func (mr *MockPaymentServiceInterfaceMockRecorder) ProcessUpdatePayment(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProcessUpdatePayment", reflect.TypeOf((*MockPaymentServiceInterface)(nil).ProcessUpdatePayment), ctx, request)
}
